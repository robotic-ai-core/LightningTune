name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        test-type: ['unit', 'integration', 'e2e']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-timeout pytest-xdist
        pip install pytorch-lightning torch torchvision --index-url https://download.pytorch.org/whl/cpu
        pip install ray[tune]
        pip install optuna hyperopt
        pip install pyyaml
        
    - name: Install package
      run: |
        pip install -e .
    
    - name: Run Unit Tests
      if: matrix.test-type == 'unit'
      run: |
        pytest tests/unit -v --cov=lightning_bohb --cov-report=xml
    
    - name: Run Integration Tests
      if: matrix.test-type == 'integration'
      run: |
        pytest tests/integration -v --cov=lightning_bohb --cov-report=xml
    
    - name: Run E2E Tests
      if: matrix.test-type == 'e2e'
      run: |
        pytest tests/e2e -v --timeout=300 --cov=lightning_bohb --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: ${{ matrix.test-type }}
        name: codecov-${{ matrix.test-type }}

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run Black
      run: |
        black --check lightning_bohb tests
    
    - name: Run isort
      run: |
        isort --check-only lightning_bohb tests
    
    - name: Run Flake8
      run: |
        flake8 lightning_bohb tests --max-line-length=100 --ignore=E203,W503
    
    - name: Run MyPy
      run: |
        mypy lightning_bohb --ignore-missing-imports